{"ast":null,"code":"var _jsxFileName = \"/home/steve/Desktop/Instalily/partselect-chat-agent-sbaek/src/components/ChatWindow.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef, useEffect } from \"react\";\nimport { getAIMessage } from \"../api/api\";\nimport \"./ChatWindow.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst initialOptions = [\"Check Order Status\", \"Return an Order\", \"Cancel an Order\", \"Search for a Part\", \"Find Model Number\"];\nfunction ChatWindow() {\n  _s();\n  const [messages, setMessages] = useState([{\n    role: \"assistant\",\n    content: \"Hello, I'm the customer service bot. See the buttons for some of the things I'm capable of, or type below and I'll try to help you.\"\n  }]);\n  const [input, setInput] = useState(\"\");\n  const [buttonsVisible, setButtonsVisible] = useState(true);\n  const [thinking, setThinking] = useState(false);\n  const [hasInteracted, setHasInteracted] = useState(false); // âœ… for initial scroll skip\n  const messagesEndRef = useRef(null);\n  const scrollToBottom = () => {\n    if (hasInteracted) {\n      var _messagesEndRef$curre;\n      (_messagesEndRef$curre = messagesEndRef.current) === null || _messagesEndRef$curre === void 0 ? void 0 : _messagesEndRef$curre.scrollIntoView({\n        behavior: \"smooth\"\n      });\n    }\n  };\n  useEffect(() => {\n    scrollToBottom();\n  }, [messages]);\n  const handleSend = async text => {\n    const userMessage = {\n      role: \"user\",\n      content: text\n    };\n    setMessages(prev => [...prev, userMessage]);\n    setHasInteracted(true); // âœ… enable scroll after first message\n\n    if (buttonsVisible) setButtonsVisible(false);\n    setThinking(true);\n    const aiResponse = await getAIMessage(text);\n    setMessages(prev => [...prev, aiResponse]);\n    setInput(\"\");\n    setThinking(false);\n  };\n  const handleQuickAction = actionText => {\n    handleSend(actionText);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chat-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"messages-container\",\n      children: [messages.map((msg, idx) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `${msg.role}-message`,\n        children: msg.content\n      }, idx, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 11\n      }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n        ref: messagesEndRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), buttonsVisible && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"quick-actions\",\n      children: initialOptions.map((text, idx) => /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handleQuickAction(text),\n        children: text\n      }, idx, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 9\n    }, this), thinking && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"thinking-indicator\",\n      children: \"\\uD83E\\uDD16 Thinking...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"input-area\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: input,\n        onChange: e => setInput(e.target.value),\n        onKeyDown: e => e.key === \"Enter\" && input.trim() && handleSend(input),\n        placeholder: \"Type your question...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handleSend(input),\n        disabled: !input.trim(),\n        children: \"Send\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 5\n  }, this);\n}\n_s(ChatWindow, \"yfsShLLNN3LEu9ys3fTvCZlgy0s=\");\n_c = ChatWindow;\nexport default ChatWindow;\nvar _c;\n$RefreshReg$(_c, \"ChatWindow\");","map":{"version":3,"names":["React","useState","useRef","useEffect","getAIMessage","jsxDEV","_jsxDEV","initialOptions","ChatWindow","_s","messages","setMessages","role","content","input","setInput","buttonsVisible","setButtonsVisible","thinking","setThinking","hasInteracted","setHasInteracted","messagesEndRef","scrollToBottom","_messagesEndRef$curre","current","scrollIntoView","behavior","handleSend","text","userMessage","prev","aiResponse","handleQuickAction","actionText","className","children","map","msg","idx","fileName","_jsxFileName","lineNumber","columnNumber","ref","onClick","type","value","onChange","e","target","onKeyDown","key","trim","placeholder","disabled","_c","$RefreshReg$"],"sources":["/home/steve/Desktop/Instalily/partselect-chat-agent-sbaek/src/components/ChatWindow.js"],"sourcesContent":["import React, { useState, useRef, useEffect } from \"react\";\nimport { getAIMessage } from \"../api/api\";\nimport \"./ChatWindow.css\";\n\nconst initialOptions = [\n  \"Check Order Status\",\n  \"Return an Order\",\n  \"Cancel an Order\",\n  \"Search for a Part\",\n  \"Find Model Number\"\n];\n\nfunction ChatWindow() {\n  const [messages, setMessages] = useState([\n    {\n      role: \"assistant\",\n      content:\n        \"Hello, I'm the customer service bot. See the buttons for some of the things I'm capable of, or type below and I'll try to help you.\"\n    }\n  ]);\n  const [input, setInput] = useState(\"\");\n  const [buttonsVisible, setButtonsVisible] = useState(true);\n  const [thinking, setThinking] = useState(false);\n  const [hasInteracted, setHasInteracted] = useState(false); // âœ… for initial scroll skip\n  const messagesEndRef = useRef(null);\n\n  const scrollToBottom = () => {\n    if (hasInteracted) {\n      messagesEndRef.current?.scrollIntoView({ behavior: \"smooth\" });\n    }\n  };\n\n  useEffect(() => {\n    scrollToBottom();\n  }, [messages]);\n\n  const handleSend = async (text) => {\n    const userMessage = { role: \"user\", content: text };\n    setMessages((prev) => [...prev, userMessage]);\n    setHasInteracted(true); // âœ… enable scroll after first message\n\n    if (buttonsVisible) setButtonsVisible(false);\n    setThinking(true);\n\n    const aiResponse = await getAIMessage(text);\n    setMessages((prev) => [...prev, aiResponse]);\n    setInput(\"\");\n    setThinking(false);\n  };\n\n  const handleQuickAction = (actionText) => {\n    handleSend(actionText);\n  };\n\n  return (\n    <div className=\"chat-container\">\n      <div className=\"messages-container\">\n        {messages.map((msg, idx) => (\n          <div key={idx} className={`${msg.role}-message`}>\n            {msg.content}\n          </div>\n        ))}\n        <div ref={messagesEndRef} />\n      </div>\n\n      {buttonsVisible && (\n        <div className=\"quick-actions\">\n          {initialOptions.map((text, idx) => (\n            <button key={idx} onClick={() => handleQuickAction(text)}>\n              {text}\n            </button>\n          ))}\n        </div>\n      )}\n\n      {thinking && (\n        <div className=\"thinking-indicator\">ðŸ¤– Thinking...</div>\n      )}\n\n      <div className=\"input-area\">\n        <input\n          type=\"text\"\n          value={input}\n          onChange={(e) => setInput(e.target.value)}\n          onKeyDown={(e) => e.key === \"Enter\" && input.trim() && handleSend(input)}\n          placeholder=\"Type your question...\"\n        />\n        <button onClick={() => handleSend(input)} disabled={!input.trim()}>\n          Send\n        </button>\n      </div>\n    </div>\n  );\n}\n\nexport default ChatWindow;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}