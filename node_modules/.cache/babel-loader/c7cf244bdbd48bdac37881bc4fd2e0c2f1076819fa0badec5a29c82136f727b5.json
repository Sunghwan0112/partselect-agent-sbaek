{"ast":null,"code":"var _jsxFileName = \"/home/steve/Desktop/Instalily/partselect-chat-agent-sbaek/src/components/ChatWindow.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef, useEffect } from \"react\";\nimport ReactMarkdown from \"react-markdown\";\nimport { getAIMessage } from \"../api/api\";\nimport \"./ChatWindow.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst initialOptions = [\"Check Order Status\", \"Return an Order\", \"Cancel an Order\", \"Search for a refrigerator part\", \"Search for a dishwasher part\", \"Is this part compatible with my model?\", \"How do I install a replacement part?\"];\nfunction ChatWindow() {\n  _s();\n  const [messages, setMessages] = useState([{\n    role: \"assistant\",\n    content: \"Hello! I'm here to help with any questions you have about refrigerator or dishwasher parts. Let me know what you need assistance with!\\n\\nIf you're looking for repair help, check out these official repair guides:\\n\\n- [Refrigerator](https://www.partselect.com/Repair/Refrigerator/)\\n- [Dishwasher](https://www.partselect.com/Repair/Dishwasher/)\"\n  }]);\n  const [input, setInput] = useState(\"\");\n  const [buttonsVisible, setButtonsVisible] = useState(true);\n  const [thinking, setThinking] = useState(false);\n  const [hasInteracted, setHasInteracted] = useState(false);\n  const messagesEndRef = useRef(null);\n  const scrollToBottom = () => {\n    if (hasInteracted) {\n      var _messagesEndRef$curre;\n      (_messagesEndRef$curre = messagesEndRef.current) === null || _messagesEndRef$curre === void 0 ? void 0 : _messagesEndRef$curre.scrollIntoView({\n        behavior: \"smooth\"\n      });\n    }\n  };\n  useEffect(() => {\n    scrollToBottom();\n  }, [messages]);\n  const handleSend = async text => {\n    const userMessage = {\n      role: \"user\",\n      content: text\n    };\n    setMessages(prev => [...prev, userMessage]);\n    setHasInteracted(true);\n    if (buttonsVisible) setButtonsVisible(false);\n    setThinking(true);\n    const aiResponse = await getAIMessage(text);\n    setMessages(prev => [...prev, aiResponse]);\n    setInput(\"\");\n    setThinking(false);\n  };\n  const handleQuickAction = actionText => {\n    handleSend(actionText);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chat-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"messages-container\",\n      children: [messages.map((msg, idx) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `${msg.role}-message`,\n        children: /*#__PURE__*/_jsxDEV(ReactMarkdown, {\n          components: {\n            a: props => /*#__PURE__*/_jsxDEV(\"a\", {\n              href: props.href,\n              target: \"_blank\",\n              rel: \"noopener noreferrer\",\n              children: props.children\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 65,\n              columnNumber: 19\n            }, this)\n          },\n          children: msg.content\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 13\n        }, this)\n      }, idx, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 11\n      }, this)), thinking && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"assistant-message-container\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"assistant-message thinking-placeholder\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"robot-thinking\",\n            children: [\"\\uD83E\\uDD16\", /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"typing-dots\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 82,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 83,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 84,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 81,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        ref: messagesEndRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this), buttonsVisible && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"quick-actions\",\n      children: initialOptions.map((text, idx) => /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handleQuickAction(text),\n        children: text\n      }, idx, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"input-area\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: input,\n        onChange: e => setInput(e.target.value),\n        onKeyDown: e => e.key === \"Enter\" && input.trim() && handleSend(input),\n        placeholder: \"Type your question...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handleSend(input),\n        disabled: !input.trim(),\n        children: \"Send\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 5\n  }, this);\n}\n_s(ChatWindow, \"hz9l2sug2I1KfYlx9xs038lcx2w=\");\n_c = ChatWindow;\nexport default ChatWindow;\nvar _c;\n$RefreshReg$(_c, \"ChatWindow\");","map":{"version":3,"names":["React","useState","useRef","useEffect","ReactMarkdown","getAIMessage","jsxDEV","_jsxDEV","initialOptions","ChatWindow","_s","messages","setMessages","role","content","input","setInput","buttonsVisible","setButtonsVisible","thinking","setThinking","hasInteracted","setHasInteracted","messagesEndRef","scrollToBottom","_messagesEndRef$curre","current","scrollIntoView","behavior","handleSend","text","userMessage","prev","aiResponse","handleQuickAction","actionText","className","children","map","msg","idx","components","a","props","href","target","rel","fileName","_jsxFileName","lineNumber","columnNumber","ref","onClick","type","value","onChange","e","onKeyDown","key","trim","placeholder","disabled","_c","$RefreshReg$"],"sources":["/home/steve/Desktop/Instalily/partselect-chat-agent-sbaek/src/components/ChatWindow.js"],"sourcesContent":["import React, { useState, useRef, useEffect } from \"react\";\nimport ReactMarkdown from \"react-markdown\";\nimport { getAIMessage } from \"../api/api\";\nimport \"./ChatWindow.css\";\n\nconst initialOptions = [\n  \"Check Order Status\",\n  \"Return an Order\",\n  \"Cancel an Order\",\n  \"Search for a refrigerator part\",\n  \"Search for a dishwasher part\",\n  \"Is this part compatible with my model?\",\n  \"How do I install a replacement part?\"\n];\n\nfunction ChatWindow() {\n  const [messages, setMessages] = useState([\n    {\n      role: \"assistant\",\n      content:\n        \"Hello! I'm here to help with any questions you have about refrigerator or dishwasher parts. Let me know what you need assistance with!\\n\\nIf you're looking for repair help, check out these official repair guides:\\n\\n- [Refrigerator](https://www.partselect.com/Repair/Refrigerator/)\\n- [Dishwasher](https://www.partselect.com/Repair/Dishwasher/)\"\n    }\n  ]);\n  const [input, setInput] = useState(\"\");\n  const [buttonsVisible, setButtonsVisible] = useState(true);\n  const [thinking, setThinking] = useState(false);\n  const [hasInteracted, setHasInteracted] = useState(false);\n  const messagesEndRef = useRef(null);\n\n  const scrollToBottom = () => {\n    if (hasInteracted) {\n      messagesEndRef.current?.scrollIntoView({ behavior: \"smooth\" });\n    }\n  };\n\n  useEffect(() => {\n    scrollToBottom();\n  }, [messages]);\n\n  const handleSend = async (text) => {\n    const userMessage = { role: \"user\", content: text };\n    setMessages((prev) => [...prev, userMessage]);\n    setHasInteracted(true);\n    if (buttonsVisible) setButtonsVisible(false);\n    setThinking(true);\n\n    const aiResponse = await getAIMessage(text);\n    setMessages((prev) => [...prev, aiResponse]);\n    setInput(\"\");\n    setThinking(false);\n  };\n\n  const handleQuickAction = (actionText) => {\n    handleSend(actionText);\n  };\n\n  return (\n    <div className=\"chat-container\">\n      <div className=\"messages-container\">\n        {messages.map((msg, idx) => (\n          <div key={idx} className={`${msg.role}-message`}>\n            <ReactMarkdown\n              components={{\n                a: (props) => (\n                  <a href={props.href} target=\"_blank\" rel=\"noopener noreferrer\">\n                    {props.children}\n                  </a>\n                ),\n              }}\n            >\n              {msg.content}\n            </ReactMarkdown>\n          </div>\n        ))}\n\n        {thinking && (\n          <div className=\"assistant-message-container\">\n            <div className=\"assistant-message thinking-placeholder\">\n              <div className=\"robot-thinking\">\n                🤖\n                <div className=\"typing-dots\">\n                  <span></span>\n                  <span></span>\n                  <span></span>\n                </div>\n              </div>\n            </div>\n          </div>\n        )}\n\n        <div ref={messagesEndRef} />\n      </div>\n\n      {buttonsVisible && (\n        <div className=\"quick-actions\">\n          {initialOptions.map((text, idx) => (\n            <button key={idx} onClick={() => handleQuickAction(text)}>\n              {text}\n            </button>\n          ))}\n        </div>\n      )}\n\n      <div className=\"input-area\">\n        <input\n          type=\"text\"\n          value={input}\n          onChange={(e) => setInput(e.target.value)}\n          onKeyDown={(e) => e.key === \"Enter\" && input.trim() && handleSend(input)}\n          placeholder=\"Type your question...\"\n        />\n        <button onClick={() => handleSend(input)} disabled={!input.trim()}>\n          Send\n        </button>\n      </div>\n    </div>\n  );\n}\n\nexport default ChatWindow;\n\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,MAAM,EAAEC,SAAS,QAAQ,OAAO;AAC1D,OAAOC,aAAa,MAAM,gBAAgB;AAC1C,SAASC,YAAY,QAAQ,YAAY;AACzC,OAAO,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,cAAc,GAAG,CACrB,oBAAoB,EACpB,iBAAiB,EACjB,iBAAiB,EACjB,gCAAgC,EAChC,8BAA8B,EAC9B,wCAAwC,EACxC,sCAAsC,CACvC;AAED,SAASC,UAAUA,CAAA,EAAG;EAAAC,EAAA;EACpB,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGX,QAAQ,CAAC,CACvC;IACEY,IAAI,EAAE,WAAW;IACjBC,OAAO,EACL;EACJ,CAAC,CACF,CAAC;EACF,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGf,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACgB,cAAc,EAAEC,iBAAiB,CAAC,GAAGjB,QAAQ,CAAC,IAAI,CAAC;EAC1D,MAAM,CAACkB,QAAQ,EAAEC,WAAW,CAAC,GAAGnB,QAAQ,CAAC,KAAK,CAAC;EAC/C,MAAM,CAACoB,aAAa,EAAEC,gBAAgB,CAAC,GAAGrB,QAAQ,CAAC,KAAK,CAAC;EACzD,MAAMsB,cAAc,GAAGrB,MAAM,CAAC,IAAI,CAAC;EAEnC,MAAMsB,cAAc,GAAGA,CAAA,KAAM;IAC3B,IAAIH,aAAa,EAAE;MAAA,IAAAI,qBAAA;MACjB,CAAAA,qBAAA,GAAAF,cAAc,CAACG,OAAO,cAAAD,qBAAA,uBAAtBA,qBAAA,CAAwBE,cAAc,CAAC;QAAEC,QAAQ,EAAE;MAAS,CAAC,CAAC;IAChE;EACF,CAAC;EAEDzB,SAAS,CAAC,MAAM;IACdqB,cAAc,CAAC,CAAC;EAClB,CAAC,EAAE,CAACb,QAAQ,CAAC,CAAC;EAEd,MAAMkB,UAAU,GAAG,MAAOC,IAAI,IAAK;IACjC,MAAMC,WAAW,GAAG;MAAElB,IAAI,EAAE,MAAM;MAAEC,OAAO,EAAEgB;IAAK,CAAC;IACnDlB,WAAW,CAAEoB,IAAI,IAAK,CAAC,GAAGA,IAAI,EAAED,WAAW,CAAC,CAAC;IAC7CT,gBAAgB,CAAC,IAAI,CAAC;IACtB,IAAIL,cAAc,EAAEC,iBAAiB,CAAC,KAAK,CAAC;IAC5CE,WAAW,CAAC,IAAI,CAAC;IAEjB,MAAMa,UAAU,GAAG,MAAM5B,YAAY,CAACyB,IAAI,CAAC;IAC3ClB,WAAW,CAAEoB,IAAI,IAAK,CAAC,GAAGA,IAAI,EAAEC,UAAU,CAAC,CAAC;IAC5CjB,QAAQ,CAAC,EAAE,CAAC;IACZI,WAAW,CAAC,KAAK,CAAC;EACpB,CAAC;EAED,MAAMc,iBAAiB,GAAIC,UAAU,IAAK;IACxCN,UAAU,CAACM,UAAU,CAAC;EACxB,CAAC;EAED,oBACE5B,OAAA;IAAK6B,SAAS,EAAC,gBAAgB;IAAAC,QAAA,gBAC7B9B,OAAA;MAAK6B,SAAS,EAAC,oBAAoB;MAAAC,QAAA,GAChC1B,QAAQ,CAAC2B,GAAG,CAAC,CAACC,GAAG,EAAEC,GAAG,kBACrBjC,OAAA;QAAe6B,SAAS,EAAG,GAAEG,GAAG,CAAC1B,IAAK,UAAU;QAAAwB,QAAA,eAC9C9B,OAAA,CAACH,aAAa;UACZqC,UAAU,EAAE;YACVC,CAAC,EAAGC,KAAK,iBACPpC,OAAA;cAAGqC,IAAI,EAAED,KAAK,CAACC,IAAK;cAACC,MAAM,EAAC,QAAQ;cAACC,GAAG,EAAC,qBAAqB;cAAAT,QAAA,EAC3DM,KAAK,CAACN;YAAQ;cAAAU,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACd;UAEP,CAAE;UAAAb,QAAA,EAEDE,GAAG,CAACzB;QAAO;UAAAiC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACC;MAAC,GAXRV,GAAG;QAAAO,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAYR,CACN,CAAC,EAED/B,QAAQ,iBACPZ,OAAA;QAAK6B,SAAS,EAAC,6BAA6B;QAAAC,QAAA,eAC1C9B,OAAA;UAAK6B,SAAS,EAAC,wCAAwC;UAAAC,QAAA,eACrD9B,OAAA;YAAK6B,SAAS,EAAC,gBAAgB;YAAAC,QAAA,GAAC,cAE9B,eAAA9B,OAAA;cAAK6B,SAAS,EAAC,aAAa;cAAAC,QAAA,gBAC1B9B,OAAA;gBAAAwC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAY,CAAC,eACb3C,OAAA;gBAAAwC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAY,CAAC,eACb3C,OAAA;gBAAAwC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAY,CAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACV,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACH;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACH;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH,CACN,eAED3C,OAAA;QAAK4C,GAAG,EAAE5B;MAAe;QAAAwB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACzB,CAAC,EAELjC,cAAc,iBACbV,OAAA;MAAK6B,SAAS,EAAC,eAAe;MAAAC,QAAA,EAC3B7B,cAAc,CAAC8B,GAAG,CAAC,CAACR,IAAI,EAAEU,GAAG,kBAC5BjC,OAAA;QAAkB6C,OAAO,EAAEA,CAAA,KAAMlB,iBAAiB,CAACJ,IAAI,CAAE;QAAAO,QAAA,EACtDP;MAAI,GADMU,GAAG;QAAAO,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAER,CACT;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CACN,eAED3C,OAAA;MAAK6B,SAAS,EAAC,YAAY;MAAAC,QAAA,gBACzB9B,OAAA;QACE8C,IAAI,EAAC,MAAM;QACXC,KAAK,EAAEvC,KAAM;QACbwC,QAAQ,EAAGC,CAAC,IAAKxC,QAAQ,CAACwC,CAAC,CAACX,MAAM,CAACS,KAAK,CAAE;QAC1CG,SAAS,EAAGD,CAAC,IAAKA,CAAC,CAACE,GAAG,KAAK,OAAO,IAAI3C,KAAK,CAAC4C,IAAI,CAAC,CAAC,IAAI9B,UAAU,CAACd,KAAK,CAAE;QACzE6C,WAAW,EAAC;MAAuB;QAAAb,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACpC,CAAC,eACF3C,OAAA;QAAQ6C,OAAO,EAAEA,CAAA,KAAMvB,UAAU,CAACd,KAAK,CAAE;QAAC8C,QAAQ,EAAE,CAAC9C,KAAK,CAAC4C,IAAI,CAAC,CAAE;QAAAtB,QAAA,EAAC;MAEnE;QAAAU,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACN,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV;AAACxC,EAAA,CAtGQD,UAAU;AAAAqD,EAAA,GAAVrD,UAAU;AAwGnB,eAAeA,UAAU;AAAC,IAAAqD,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}