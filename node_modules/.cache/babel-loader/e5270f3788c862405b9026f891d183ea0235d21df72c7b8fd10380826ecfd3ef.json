{"ast":null,"code":"import _slicedToArray from \"/home/steve/Desktop/Instalily/partselect-chat-agent-sbaek/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\n/**\n * @import {Info, Space} from 'property-information'\n */\n\n/**\n * @typedef Definition\n *   Definition of a schema.\n * @property {Record<string, string> | undefined} [attributes]\n *   Normalzed names to special attribute case.\n * @property {ReadonlyArray<string> | undefined} [mustUseProperty]\n *   Normalized names that must be set as properties.\n * @property {Record<string, number | null>} properties\n *   Property names to their types.\n * @property {Space | undefined} [space]\n *   Space.\n * @property {Transform} transform\n *   Transform a property name.\n */\n\n/**\n * @callback Transform\n *   Transform.\n * @param {Record<string, string>} attributes\n *   Attributes.\n * @param {string} property\n *   Property.\n * @returns {string}\n *   Attribute.\n */\n\nimport { normalize } from '../normalize.js';\nimport { DefinedInfo } from './defined-info.js';\nimport { Schema } from './schema.js';\n\n/**\n * @param {Definition} definition\n *   Definition.\n * @returns {Schema}\n *   Schema.\n */\nexport function create(definition) {\n  /** @type {Record<string, Info>} */\n  var properties = {};\n  /** @type {Record<string, string>} */\n  var normals = {};\n  for (var _i = 0, _Object$entries = Object.entries(definition.properties); _i < _Object$entries.length; _i++) {\n    var _Object$entries$_i = _slicedToArray(_Object$entries[_i], 2),\n      property = _Object$entries$_i[0],\n      value = _Object$entries$_i[1];\n    var info = new DefinedInfo(property, definition.transform(definition.attributes || {}, property), value, definition.space);\n    if (definition.mustUseProperty && definition.mustUseProperty.includes(property)) {\n      info.mustUseProperty = true;\n    }\n    properties[property] = info;\n    normals[normalize(property)] = property;\n    normals[normalize(info.attribute)] = property;\n  }\n  return new Schema(properties, normals, definition.space);\n}","map":{"version":3,"names":["normalize","DefinedInfo","Schema","create","definition","properties","normals","_i","_Object$entries","Object","entries","length","_Object$entries$_i","_slicedToArray","property","value","info","transform","attributes","space","mustUseProperty","includes","attribute"],"sources":["/home/steve/Desktop/Instalily/partselect-chat-agent-sbaek/node_modules/property-information/lib/util/create.js"],"sourcesContent":["/**\n * @import {Info, Space} from 'property-information'\n */\n\n/**\n * @typedef Definition\n *   Definition of a schema.\n * @property {Record<string, string> | undefined} [attributes]\n *   Normalzed names to special attribute case.\n * @property {ReadonlyArray<string> | undefined} [mustUseProperty]\n *   Normalized names that must be set as properties.\n * @property {Record<string, number | null>} properties\n *   Property names to their types.\n * @property {Space | undefined} [space]\n *   Space.\n * @property {Transform} transform\n *   Transform a property name.\n */\n\n/**\n * @callback Transform\n *   Transform.\n * @param {Record<string, string>} attributes\n *   Attributes.\n * @param {string} property\n *   Property.\n * @returns {string}\n *   Attribute.\n */\n\nimport {normalize} from '../normalize.js'\nimport {DefinedInfo} from './defined-info.js'\nimport {Schema} from './schema.js'\n\n/**\n * @param {Definition} definition\n *   Definition.\n * @returns {Schema}\n *   Schema.\n */\nexport function create(definition) {\n  /** @type {Record<string, Info>} */\n  const properties = {}\n  /** @type {Record<string, string>} */\n  const normals = {}\n\n  for (const [property, value] of Object.entries(definition.properties)) {\n    const info = new DefinedInfo(\n      property,\n      definition.transform(definition.attributes || {}, property),\n      value,\n      definition.space\n    )\n\n    if (\n      definition.mustUseProperty &&\n      definition.mustUseProperty.includes(property)\n    ) {\n      info.mustUseProperty = true\n    }\n\n    properties[property] = info\n\n    normals[normalize(property)] = property\n    normals[normalize(info.attribute)] = property\n  }\n\n  return new Schema(properties, normals, definition.space)\n}\n"],"mappings":";AAAA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,SAAQA,SAAS,QAAO,iBAAiB;AACzC,SAAQC,WAAW,QAAO,mBAAmB;AAC7C,SAAQC,MAAM,QAAO,aAAa;;AAElC;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,SAASC,MAAMA,CAACC,UAAU,EAAE;EACjC;EACA,IAAMC,UAAU,GAAG,CAAC,CAAC;EACrB;EACA,IAAMC,OAAO,GAAG,CAAC,CAAC;EAElB,SAAAC,EAAA,MAAAC,eAAA,GAAgCC,MAAM,CAACC,OAAO,CAACN,UAAU,CAACC,UAAU,CAAC,EAAAE,EAAA,GAAAC,eAAA,CAAAG,MAAA,EAAAJ,EAAA,IAAE;IAAlE,IAAAK,kBAAA,GAAAC,cAAA,CAAAL,eAAA,CAAAD,EAAA;MAAOO,QAAQ,GAAAF,kBAAA;MAAEG,KAAK,GAAAH,kBAAA;IACzB,IAAMI,IAAI,GAAG,IAAIf,WAAW,CAC1Ba,QAAQ,EACRV,UAAU,CAACa,SAAS,CAACb,UAAU,CAACc,UAAU,IAAI,CAAC,CAAC,EAAEJ,QAAQ,CAAC,EAC3DC,KAAK,EACLX,UAAU,CAACe,KACb,CAAC;IAED,IACEf,UAAU,CAACgB,eAAe,IAC1BhB,UAAU,CAACgB,eAAe,CAACC,QAAQ,CAACP,QAAQ,CAAC,EAC7C;MACAE,IAAI,CAACI,eAAe,GAAG,IAAI;IAC7B;IAEAf,UAAU,CAACS,QAAQ,CAAC,GAAGE,IAAI;IAE3BV,OAAO,CAACN,SAAS,CAACc,QAAQ,CAAC,CAAC,GAAGA,QAAQ;IACvCR,OAAO,CAACN,SAAS,CAACgB,IAAI,CAACM,SAAS,CAAC,CAAC,GAAGR,QAAQ;EAC/C;EAEA,OAAO,IAAIZ,MAAM,CAACG,UAAU,EAAEC,OAAO,EAAEF,UAAU,CAACe,KAAK,CAAC;AAC1D"},"metadata":{},"sourceType":"module","externalDependencies":[]}